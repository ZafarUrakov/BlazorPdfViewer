@page "/"
@using Telerik.Blazor.Components.Editor
@using EditorNS = Telerik.Blazor.Components.Editor
@inject IJSRuntime JSRuntime

<h3>Telerik Editor (No Typing, Tools Work)</h3>
<TelerikEditor @ref="@EditorRef"
               Tools="@MyTools"
               Height="400px"
               EditMode="@EditorEditMode.Iframe"
               ValueChanged="@OnChange"
               Value="@EditorContent">
</TelerikEditor>

<div style="margin-top: 20px;">
    <strong>Current Content (HTML):</strong>
    <pre>@EditorContent</pre>
</div>

@code {
    private TelerikEditor EditorRef { get; set; }
    private string EditorContent { get; set; } = @"";
    private List<IEditorTool> MyTools { get; set; }
    private const string StorageKey = "telerikEditorContent";
    private bool _firstRender = true;

    private async Task OnChange(string value)
    {
        EditorContent = value;
        await JSRuntime.InvokeVoidAsync("sessionStorage.setItem", StorageKey, value);
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        MyTools = new List<IEditorTool>
        {
            new EditorButtonGroup(
                new EditorNS.Bold(),
                new EditorNS.Italic(),
                new EditorNS.Underline(),
                new EditorNS.Strikethrough()
            ),
            new EditorNS.ForeColor(),
            new EditorNS.BackgroundColor(),
            new EditorButtonGroup(
                new EditorNS.AlignLeft(),
                new EditorNS.AlignCenter(),
                new EditorNS.AlignRight(),
                new EditorNS.AlignJustify()
            ),
            new EditorNS.Format(),
            new EditorNS.FontSize(),
            new EditorNS.InsertTable(),
            new EditorNS.InsertImage(),
            new EditorNS.CreateLink(),
            new EditorNS.ViewHtml()
        };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_firstRender)
        {
            _firstRender = false;
            var storedContent = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", StorageKey);
            if (!string.IsNullOrEmpty(storedContent))
            {
                EditorContent = storedContent;
                StateHasChanged(); 
            }
        }
    }
}
